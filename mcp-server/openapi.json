{
  "openapi": "3.0.1",
  "info": {
    "title": "Cocktails Api",
    "description": "Cocktails Api",
    "version": "1.0",
    "x-logo": {
      "url": "/api-docs-logo.png",
      "altText": "Api documentation for the cocktails api"
    }
  },
  "servers": [
    {
      "url": "http://aca-vec-eus-prd-cocktailsapi-001.proudfield-08e1f932.eastus.azurecontainerapps.io/"
    }
  ],
  "paths": {
    "/api/v1/cocktails": {
      "get": {
        "tags": [
          "Cocktails"
        ],
        "description": "Search the cocktail recipes",
        "operationId": "GetCocktailsList",
        "parameters": [
          {
            "name": "freeText",
            "in": "query",
            "description": "The free text search term to match against",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The number of cocktail recipes to skip from the paged response",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The number of cocktail recipes to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "m",
            "in": "query",
            "description": "A list of cocktails that can be included in the list",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": null
            }
          },
          {
            "name": "match-exclusive",
            "in": "query",
            "description": "Whether or not the supplied matches must be exclusively returned",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "inc",
            "in": "query",
            "description": "The list of extension objects to include for each cocktail recipe",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CocktailDataIncludeModel"
              },
              "default": null
            }
          },
          {
            "name": "sf",
            "in": "query",
            "description": "An optional list of filters to use when quering the cocktail recipes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": null
            }
          },
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CocktailsListRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cocktails"
        ],
        "description": "Seeds the cocktails in the database",
        "operationId": "SeedCocktails",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cocktails/{id}": {
      "get": {
        "tags": [
          "Cocktails"
        ],
        "description": "Get a specific cocktail recipe",
        "operationId": "GetCocktail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The cocktail recipe unique identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CocktailRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cocktails/ingredients/filters": {
      "get": {
        "tags": [
          "Cocktails"
        ],
        "description": "Get the available cocktails filters to be used while performing a search",
        "operationId": "GetCocktailIngredientFilters",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/CocktailIngredientFiltersRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cocktails/ingredients": {
      "put": {
        "tags": [
          "Cocktails"
        ],
        "description": "Seeds the ingredients in the database",
        "operationId": "SeedIngredients",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/legal/documents/privacy-policy": {
      "get": {
        "tags": [
          "Legal"
        ],
        "description": "Gets the Cezzi's.com privacy policy",
        "operationId": "GetPrivacyPolicy",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/LegalDocumentRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/legal/documents/terms-of-service": {
      "get": {
        "tags": [
          "Legal"
        ],
        "description": "Gets the Cezzi's.com terms of service",
        "operationId": "GetTermsOfService",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/LegalDocumentRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/owned/profile": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets the account profile for the user represented within the authenticated bearer token",
        "operationId": "GetAccountOwnedProfile",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOwnedProfileRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Updates the account profile for the user represented within the authenticated bearer token",
        "operationId": "UpdateAccountOwnedProfile",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountOwnedProfileRq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOwnedProfileRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      }
    },
    "/api/v1/accounts/owned/profile/email": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Updates the account profile email address for the user represented within the authenticated bearer token",
        "operationId": "UpdateAccountOwnedProfileEmail",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountOwnedProfileEmailRq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOwnedProfileRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      }
    },
    "/api/v1/accounts/owned/profile/accessibility": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Updates the account profile accessibility settings for the user represented within the authenticated bearer token",
        "operationId": "UpdateAccountOwnedAccessibilitySettings",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountOwnedAccessibilitySettingsRq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOwnedProfileRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      }
    },
    "/api/v1/accounts/owned/profile/image": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Uploads an account profile image for to the user represented within the authenticated bearer token",
        "operationId": "UploadProfileImage",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data; x-api-version=1.0": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/IFormFile"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/UploadProfileImageRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      }
    },
    "/api/v1/accounts/owned/profile/cocktails/favorites": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Manages the account profile favorite cocktails list for the user represented within the authenticated bearer token",
        "operationId": "ManageFavoriteCocktails",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/ManageFavoriteCocktailsRq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/AccountOwnedProfileRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      }
    },
    "/api/v1/accounts/owned/profile/cocktails/ratings": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Rates a cocktail for the account profile user represented within the authenticated bearer token",
        "operationId": "RateCocktail",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/RateCocktailRq"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/RateCocktailRs"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets the account cocktail ratings for the account profile user represented within the authenticated bearer token",
        "operationId": "GetCocktailRatings",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCocktailRatingsRs"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read"
            ]
          }
        ]
      }
    },
    "/api/v1/accounts/owned/profile/cocktails/recommendations": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Sends a cocktail recommendation for review",
        "operationId": "SendCocktailRecommendation",
        "parameters": [
          {
            "name": "X-Key",
            "in": "header",
            "description": "Subscription key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The cocktail recommendation request body",
          "content": {
            "application/json; x-api-version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CocktailRecommendationRq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "",
            "content": {
              "application/json; x-api-version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "Account.Read",
              "Account.Write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountAccessibilitySettingsModel": {
        "required": [
          "theme"
        ],
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/DisplayThemeModel"
          }
        },
        "description": "The accessibility settings for the account visible to other users"
      },
      "AccountAddressModel": {
        "required": [
          "addressLine1",
          "addressLine2",
          "city",
          "region",
          "subRegion",
          "postalCode",
          "country"
        ],
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The primary street address."
          },
          "addressLine2": {
            "type": "string",
            "description": "The secondary street address building sub divider"
          },
          "city": {
            "type": "string",
            "description": "The city the address is within"
          },
          "region": {
            "type": "string",
            "description": "The state or province"
          },
          "subRegion": {
            "type": "string",
            "description": "The state or province divered such as county"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal or zip code"
          },
          "country": {
            "type": "string",
            "description": "The country"
          }
        },
        "description": "The optional primary address listed with the account"
      },
      "AccountCocktailRatingModel": {
        "required": [
          "oneStars",
          "twoStars",
          "threeStars",
          "fourStars",
          "fiveStars",
          "totalStars",
          "rating",
          "ratingCount"
        ],
        "type": "object",
        "properties": {
          "oneStars": {
            "type": "integer",
            "description": "The number of one star ratings",
            "format": "int32",
            "example": "5"
          },
          "twoStars": {
            "type": "integer",
            "description": "The number of two star ratings",
            "format": "int32",
            "example": "1"
          },
          "threeStars": {
            "type": "integer",
            "description": "The number of three star ratings",
            "format": "int32",
            "example": "1"
          },
          "fourStars": {
            "type": "integer",
            "description": "The number of four star ratings",
            "format": "int32",
            "example": "1"
          },
          "fiveStars": {
            "type": "integer",
            "description": "The number of five star ratings",
            "format": "int32",
            "example": "1"
          },
          "totalStars": {
            "type": "integer",
            "description": "The total number of stars given",
            "format": "int32",
            "example": "1"
          },
          "rating": {
            "type": "number",
            "description": "The actual overal rating",
            "format": "double",
            "example": "3.5"
          },
          "ratingCount": {
            "type": "integer",
            "description": "The total number of ratings given",
            "format": "int32",
            "example": "1"
          }
        },
        "description": "The cocktail rating values"
      },
      "AccountCocktailRatingsModel": {
        "required": [
          "cocktailId",
          "stars"
        ],
        "type": "object",
        "properties": {
          "cocktailId": {
            "type": "string",
            "description": "The cocktail identifier"
          },
          "stars": {
            "type": "integer",
            "description": "The rating for the cocktail (1-5)",
            "format": "int32"
          }
        }
      },
      "AccountCocktailRatingsRs": {
        "required": [
          "ratings"
        ],
        "type": "object",
        "properties": {
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCocktailRatingsModel"
            },
            "description": "The cocktail ratings"
          }
        }
      },
      "AccountOwnedProfileRs": {
        "required": [
          "subjectId",
          "loginEmail",
          "email",
          "givenName",
          "familyName",
          "avatarUri",
          "primaryAddress",
          "displayName",
          "accessibility",
          "favoriteCocktails"
        ],
        "type": "object",
        "properties": {
          "subjectId": {
            "type": "string",
            "description": "The federated subject identifier for the account"
          },
          "loginEmail": {
            "type": "string",
            "description": "The login email address for the account"
          },
          "email": {
            "type": "string",
            "description": "The email address for the account"
          },
          "givenName": {
            "type": "string",
            "description": "The given name on the account"
          },
          "familyName": {
            "type": "string",
            "description": "The family name on the account"
          },
          "avatarUri": {
            "type": "string",
            "description": "The avatar image uri for the account"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/AccountAddressModel"
          },
          "displayName": {
            "type": "string",
            "description": "The display name for the account visible to other users"
          },
          "accessibility": {
            "$ref": "#/components/schemas/AccountAccessibilitySettingsModel"
          },
          "favoriteCocktails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of favorite cocktails"
          }
        }
      },
      "CocktailDataIncludeModel": {
        "enum": [
          "mainImages",
          "searchTiles",
          "descriptiveTitle"
        ]
      },
      "CocktailFavoriteActionModel": {
        "required": [
          "cocktailId",
          "action"
        ],
        "type": "object",
        "properties": {
          "cocktailId": {
            "type": "string",
            "description": "The cocktail identifier"
          },
          "action": {
            "$ref": "#/components/schemas/CocktailFavoritingActionModel"
          }
        }
      },
      "CocktailFavoritingActionModel": {
        "enum": [
          "add",
          "remove"
        ],
        "description": "The action to take on the cocktail within the favorites list"
      },
      "CocktailImageModel": {
        "required": [
          "uri",
          "width",
          "height"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "The uri of the image",
            "example": "https://cdn.cezzis.com/cocktails/traditional-clover-club-cocktail-main.webp"
          },
          "width": {
            "type": "integer",
            "description": "The width of the image",
            "format": "int32",
            "example": 800
          },
          "height": {
            "type": "integer",
            "description": "The height of the image",
            "format": "int32",
            "example": 533
          }
        }
      },
      "CocktailImageModel2": {
        "required": [
          "uri",
          "width",
          "height"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "The uri of the image",
            "example": "https://cdn.cezzis.com/cocktails/traditional-clover-club-cocktail-main.webp"
          },
          "width": {
            "type": "integer",
            "description": "The width of the image",
            "format": "int32",
            "example": 800
          },
          "height": {
            "type": "integer",
            "description": "The height of the image",
            "format": "int32",
            "example": 533
          }
        }
      },
      "CocktailIngredientFiltersRs": {
        "required": [
          "glassware",
          "spirits",
          "liqueurs",
          "fruits",
          "vegetables",
          "herbsAndFlowers",
          "syrupsAndSauces",
          "bitters",
          "proteins",
          "juices",
          "dilutions",
          "beerWineChampagne",
          "eras"
        ],
        "type": "object",
        "properties": {
          "glassware": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel"
            },
            "description": "The cocktail ingredient filters for searching against recommended glassware"
          },
          "spirits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel2"
            },
            "description": "The cocktail ingredient filters for searching against spirits"
          },
          "liqueurs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel3"
            },
            "description": "The cocktail ingredient filters for searching against liqueurs"
          },
          "fruits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel4"
            },
            "description": "The cocktail ingredient filters for searching against friuts"
          },
          "vegetables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel5"
            },
            "description": "The cocktail ingredient filters for searching against vegetables"
          },
          "herbsAndFlowers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel6"
            },
            "description": "The cocktail ingredient filters for searching against herbs and flowers"
          },
          "syrupsAndSauces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel7"
            },
            "description": "The cocktail ingredient filters for searching against syrups and sauces"
          },
          "bitters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel8"
            },
            "description": "The cocktail ingredient filters for searching against bitters"
          },
          "proteins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel9"
            },
            "description": "The cocktail ingredient filters for searching against proteins"
          },
          "juices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel10"
            },
            "description": "The cocktail ingredient filters for searching against juices"
          },
          "dilutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel11"
            },
            "description": "The cocktail ingredient filters for searching against dilutions"
          },
          "beerWineChampagne": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel12"
            },
            "description": "The cocktail ingredient filters for searching against beers, wines and champagnes"
          },
          "eras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientFilterModel13"
            },
            "description": "The cocktail ingredient filters for searching against eras when cocktails were established"
          }
        }
      },
      "CocktailModel": {
        "required": [
          "id",
          "title",
          "descriptiveTitle",
          "description",
          "content",
          "publishedOn",
          "modifiedOn",
          "serves",
          "prepTimeMinutes",
          "isIba",
          "mainImages",
          "searchTiles",
          "glassware",
          "rating",
          "searchableTitles",
          "tags",
          "ingredients",
          "instructions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The cocktail recipe unique identifier",
            "example": "clover-club"
          },
          "title": {
            "type": "string",
            "description": "The name of the cocktail recipe",
            "example": "Clover Club"
          },
          "descriptiveTitle": {
            "type": "string",
            "description": "A more descriptive title for the cocktail recipe, generally used as an editorial title",
            "example": "Clover Club: A Pink-Hued Classic"
          },
          "description": {
            "type": "string",
            "description": "A brief editorial description for the cocktail recipe",
            "example": "A classic pre-Prohibition cocktail made with gin, raspberry syrup, lemon juice, and egg white. Named after a Philadelphia men's club, it's a smooth, frothy, and slightly tart cocktail."
          },
          "content": {
            "type": "string",
            "description": "The complete descriptive cocktail recipe including ingredients, directions and historical information in markdown format",
            "example": "--markdown content--"
          },
          "publishedOn": {
            "type": "string",
            "description": "The date this cocktail recipe was published on Cezzis.Com",
            "format": "date-time",
            "example": "2024-05-24T00:00:00-07:00"
          },
          "modifiedOn": {
            "type": "string",
            "description": "The date this cocktail recipe was last modified on Cezzis.Com",
            "format": "date-time",
            "example": "2024-05-24T00:00:00-07:00"
          },
          "serves": {
            "type": "integer",
            "description": "The number of people the cocktail recipe serves",
            "format": "int32",
            "example": 1
          },
          "prepTimeMinutes": {
            "type": "integer",
            "description": "The average number of minutes to build the cocktail using this recipe",
            "format": "int32",
            "example": 5
          },
          "isIba": {
            "type": "boolean",
            "description": "Whether or not the cocktail represented by this recipe is recognized by the International Bartenders Association",
            "example": true
          },
          "mainImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CocktailImageModel"
            },
            "description": "A list of primary images for the cocktail recipe"
          },
          "searchTiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CocktailImageModel2"
            },
            "description": "A list of secondary, smaller sized images for the cocktail recipe"
          },
          "glassware": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlasswareTypeModel"
            },
            "description": "The recommended glassware to use when serving the cocktail",
            "example": [
              "coupe",
              "cocktailGlass"
            ]
          },
          "rating": {
            "$ref": "#/components/schemas/CocktailRatingModel"
          },
          "searchableTitles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of titles that are queried against when issuing cocktail recipe search queries",
            "example": [
              "Clover Club",
              "Clover Club: A Pink-Hued Classic"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of taxonomy tags defining the cocktail recipe",
            "example": [
              "Traditional"
            ]
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientModel"
            },
            "description": "The list of ingredients that make up the cocktail recipe"
          },
          "instructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstructionStepModel"
            },
            "description": "The list of instructions to make the cocktail recipe"
          }
        },
        "description": "The cocktail recipe model"
      },
      "CocktailRatingModel": {
        "required": [
          "oneStars",
          "twoStars",
          "threeStars",
          "fourStars",
          "fiveStars",
          "totalStars",
          "rating",
          "ratingCount"
        ],
        "type": "object",
        "properties": {
          "oneStars": {
            "type": "integer",
            "description": "The number of one star ratings",
            "format": "int32",
            "example": "5"
          },
          "twoStars": {
            "type": "integer",
            "description": "The number of two star ratings",
            "format": "int32",
            "example": "1"
          },
          "threeStars": {
            "type": "integer",
            "description": "The number of three star ratings",
            "format": "int32",
            "example": "1"
          },
          "fourStars": {
            "type": "integer",
            "description": "The number of four star ratings",
            "format": "int32",
            "example": "1"
          },
          "fiveStars": {
            "type": "integer",
            "description": "The number of five star ratings",
            "format": "int32",
            "example": "1"
          },
          "totalStars": {
            "type": "integer",
            "description": "The total number of stars given",
            "format": "int32",
            "example": "1"
          },
          "rating": {
            "type": "number",
            "description": "The actual overal rating",
            "format": "double",
            "example": "3.5"
          },
          "ratingCount": {
            "type": "integer",
            "description": "The total number of ratings given",
            "format": "int32",
            "example": "1"
          }
        },
        "description": "A ratings for this cocktail"
      },
      "CocktailRecommendationModel": {
        "required": [
          "name",
          "ingredients",
          "directions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the cocktail or variation",
            "example": "Painkiller (Cezzi's Version)"
          },
          "ingredients": {
            "type": "string",
            "description": "The ingredients description of the cocktail or variation",
            "example": "3 ounces pimm's no.1"
          },
          "directions": {
            "type": "string",
            "description": "The directions description of the cocktail or variation",
            "example": "Pour everything into a cocktail glass and stir"
          }
        },
        "description": "The cocktail recommendation model"
      },
      "CocktailRecommendationRq": {
        "required": [
          "recommendation",
          "verificationCode"
        ],
        "type": "object",
        "properties": {
          "recommendation": {
            "$ref": "#/components/schemas/CocktailRecommendationModel"
          },
          "verificationCode": {
            "type": "string",
            "description": "The google recaptcha verification code returned after being valid",
            "example": "03AFcWeA4HedFMVgSEGAfbZXZdbLu0RXp"
          }
        }
      },
      "CocktailRs": {
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CocktailModel"
          }
        }
      },
      "CocktailsListModel": {
        "required": [
          "id",
          "title",
          "descriptiveTitle",
          "rating",
          "ingredients",
          "isIba",
          "serves",
          "prepTimeMinutes",
          "mainImages",
          "searchTiles",
          "glassware"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The cocktail recipe unique identifier",
            "example": "clover-club"
          },
          "title": {
            "type": "string",
            "description": "The name of the cocktail recipe",
            "example": "Clover Club"
          },
          "descriptiveTitle": {
            "type": "string",
            "description": "A more descriptive title for the cocktail recipe, generally used as an editorial title",
            "example": "Clover Club: A Pink-Hued Classic"
          },
          "rating": {
            "type": "number",
            "description": "The overral rating for the recipe",
            "format": "double",
            "example": "3.5"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientModel"
            },
            "description": "The list of ingredients that make up the cocktail recipe"
          },
          "isIba": {
            "type": "boolean",
            "description": "Whether or not the cocktail represented by this recipe is recognized by the International Bartenders Association",
            "example": true
          },
          "serves": {
            "type": "integer",
            "description": "The number of people the cocktail recipe serves",
            "format": "int32",
            "example": 1
          },
          "prepTimeMinutes": {
            "type": "integer",
            "description": "The average number of minutes to build the cocktail using this recipe",
            "format": "int32",
            "example": 5
          },
          "mainImages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of primary image uris for the cocktail recipe",
            "example": [
              "https://cdn.cezzis.com/cocktails/traditional-clover-club-cocktail-main.webp"
            ]
          },
          "searchTiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of secondary, smaller sized image uris for the cocktail recipe",
            "example": [
              "https://cdn.cezzis.com/cocktails/traditional-clover-club-cocktail-300x300.webp"
            ]
          },
          "glassware": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlasswareTypeModel"
            },
            "description": "The recommended glassware to use when serving the cocktail",
            "example": [
              "coupe",
              "cocktailGlass"
            ]
          }
        }
      },
      "CocktailsListRs": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CocktailsListModel"
            },
            "description": "A list of cocktail recipe list models"
          }
        }
      },
      "DisplayThemeModel": {
        "enum": [
          "light",
          "dark"
        ],
        "description": "The accessibility theme"
      },
      "DisplayThemeModel2": {
        "enum": [
          "light",
          "dark"
        ],
        "description": "The display theme (light, dark)"
      },
      "DocumentFormat": {
        "enum": [
          "markdown"
        ],
        "description": "The format that the document content is in"
      },
      "GlasswareTypeModel": {
        "enum": [
          "none",
          "rocks",
          "highball",
          "shotGlass",
          "coupe",
          "copperMug",
          "collins",
          "cocktailGlass",
          "wineGlass",
          "flute",
          "lowball",
          "fizz",
          "tikiMug",
          "pintGlass",
          "julepTin",
          "doubleRocks",
          "hurricane",
          "hollowedPineapple",
          "snifter",
          "scorpionBowl"
        ]
      },
      "IFormFile": {
        "type": "string",
        "format": "binary"
      },
      "IngredientApplicationModel": {
        "enum": [
          "base",
          "additional",
          "garnishment",
          "muddle"
        ]
      },
      "IngredientFilterModel": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel10": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel11": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel12": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel13": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel2": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel3": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel4": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel5": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel6": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel7": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel8": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientFilterModel9": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The filter identifier",
            "example": "classification-name"
          },
          "name": {
            "type": "string",
            "description": "The display name of the filter",
            "example": "Name Of Filter"
          }
        }
      },
      "IngredientModel": {
        "required": [
          "name",
          "uoM",
          "requirement",
          "display",
          "units",
          "preparation",
          "suggestions",
          "types",
          "applications"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ingredient",
            "example": "Gin"
          },
          "uoM": {
            "$ref": "#/components/schemas/UofMTypeModel"
          },
          "requirement": {
            "$ref": "#/components/schemas/IngredientRequirementTypeModel"
          },
          "display": {
            "type": "string",
            "description": "Gets the complete display value for the ingredient including units and measurments",
            "example": "1 1/2 ounces gin"
          },
          "units": {
            "type": "number",
            "description": "The number of units to use in relation to the UoM (unit of measure) in the cocktail recipe",
            "format": "float",
            "example": 1.5
          },
          "preparation": {
            "$ref": "#/components/schemas/PreparationTypeModel"
          },
          "suggestions": {
            "type": "string",
            "description": "Suggestion when using this ingredient",
            "example": "Preferably Plymouth"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientTypeModel"
            },
            "description": "The ingredient types that this ingredient is in relation to the cocktail recipe",
            "example": [
              "bitters",
              "spirit"
            ]
          },
          "applications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IngredientApplicationModel"
            },
            "description": "The ingredient applications that this ingredient is in relation to the cocktail recipe",
            "example": [
              "base",
              "garnishment"
            ]
          }
        }
      },
      "IngredientRequirementTypeModel": {
        "enum": [
          "none",
          "optional",
          "required"
        ],
        "description": "Whether or not this ingredient is required ('Required' or 'Optional')",
        "example": "required"
      },
      "IngredientTypeModel": {
        "enum": [
          "herb",
          "fruit",
          "juice",
          "bitters",
          "syrup",
          "protein",
          "flowers",
          "sauce",
          "vegetable",
          "dilution",
          "beer",
          "spirit",
          "liqueur",
          "wine",
          "champagne"
        ]
      },
      "InstructionStepModel": {
        "required": [
          "display",
          "order"
        ],
        "type": "object",
        "properties": {
          "display": {
            "type": "string",
            "description": "The displayable value for the instruction step",
            "example": "Combine the gin, lemon juice, raspberry syrup, and egg white in a shaker without ice and dry shake (shake without ice) for about 10 seconds to make the foam."
          },
          "order": {
            "type": "integer",
            "description": "The order of the instruction step in which it should be performed",
            "format": "int32",
            "example": 1
          }
        }
      },
      "LegalDocumentRs": {
        "required": [
          "document",
          "format"
        ],
        "type": "object",
        "properties": {
          "document": {
            "type": "string",
            "description": "The document content"
          },
          "format": {
            "$ref": "#/components/schemas/DocumentFormat"
          }
        }
      },
      "ManageFavoriteCocktailsRq": {
        "required": [
          "cocktailActions"
        ],
        "type": "object",
        "properties": {
          "cocktailActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CocktailFavoriteActionModel"
            }
          }
        }
      },
      "PreparationTypeModel": {
        "enum": [
          "none",
          "chilled",
          "freshlySqueezed",
          "peeledAndJuiced",
          "freshlyGrated",
          "quartered",
          "freshPressed"
        ],
        "description": "Any preparation that should be made with this ingredient",
        "example": "none"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RateCocktailRq": {
        "required": [
          "cocktailId",
          "stars"
        ],
        "type": "object",
        "properties": {
          "cocktailId": {
            "type": "string",
            "description": "The cocktail identifier"
          },
          "stars": {
            "type": "integer",
            "description": "The rating for the cocktail (1-5)",
            "format": "int32"
          }
        }
      },
      "RateCocktailRs": {
        "required": [
          "ratings",
          "cocktailId",
          "cocktailRating"
        ],
        "type": "object",
        "properties": {
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCocktailRatingsModel"
            },
            "description": "The cocktail ratings"
          },
          "cocktailId": {
            "type": "string",
            "description": "The cocktail identifier"
          },
          "cocktailRating": {
            "$ref": "#/components/schemas/AccountCocktailRatingModel"
          }
        }
      },
      "UofMTypeModel": {
        "enum": [
          "none",
          "ounces",
          "dashes",
          "tablespoon",
          "topoff",
          "item",
          "teaspoon",
          "toTaste",
          "barspoon",
          "cups",
          "splash",
          "discretion"
        ],
        "description": "The unit of measure when using this ingredient in a cocktail recipe",
        "example": "ounces"
      },
      "UpdateAccountOwnedAccessibilitySettingsRq": {
        "required": [
          "theme"
        ],
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/DisplayThemeModel2"
          }
        }
      },
      "UpdateAccountOwnedProfileEmailRq": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address for the account"
          }
        }
      },
      "UpdateAccountOwnedProfileRq": {
        "required": [
          "givenName",
          "familyName",
          "displayName",
          "primaryAddress"
        ],
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "description": "The given name on the account"
          },
          "familyName": {
            "type": "string",
            "description": "The family name on the account"
          },
          "displayName": {
            "type": "string",
            "description": "The display for the account visible to other users"
          },
          "primaryAddress": {
            "$ref": "#/components/schemas/AccountAddressModel"
          }
        }
      },
      "UploadProfileImageRs": {
        "required": [
          "imageUri"
        ],
        "type": "object",
        "properties": {
          "imageUri": {
            "type": "string",
            "description": "The uri for the image that was uploaded"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://cezzis.b2clogin.com/cezzis.onmicrosoft.com/B2C_1_SignInSignUp_Policy/oauth2/v2.0/authorize",
            "tokenUrl": "https://cezzis.b2clogin.com/cezzis.onmicrosoft.com/B2C_1_SignInSignUp_Policy/oauth2/v2.0/token",
            "scopes": {
              "https://cezzis.onmicrosoft.com/cocktailsapi/Account.Read": "Account.Read",
              "https://cezzis.onmicrosoft.com/cocktailsapi/Account.Write": "Account.Write"
            },
            "x-defaultClientId": "84744194-da27-410f-ae0e-74f5589d4c96",
            "x-usePkce": "SHA-256"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Cocktails"
    },
    {
      "name": "Legal"
    },
    {
      "name": "Accounts"
    }
  ]
}